<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.laven.app.mybatis.dao.LavenAppUserAddressMapper">
  <resultMap id="BaseResultMap" type="com.laven.app.mybatis.dto.LavenAppUserAddress">
    <id column="userInfoId" jdbcType="VARCHAR" property="userinfoid" />
    <id column="addressId" jdbcType="VARCHAR" property="addressid" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="country" jdbcType="VARCHAR" property="country" />
    <result column="district" jdbcType="VARCHAR" property="district" />
    <result column="detailInfo" jdbcType="VARCHAR" property="detailinfo" />
    <result column="notes" jdbcType="VARCHAR" property="notes" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userInfoId, addressId, longitude, latitude, province, city, country, district, detailInfo, 
    notes
  </sql>
  <select id="selectByExample" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddressExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from laven_app_user_address_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddressKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from laven_app_user_address_t
    where userInfoId = #{userinfoid,jdbcType=VARCHAR}
      and addressId = #{addressid,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddressKey">
    delete from laven_app_user_address_t
    where userInfoId = #{userinfoid,jdbcType=VARCHAR}
      and addressId = #{addressid,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddressExample">
    delete from laven_app_user_address_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddress">
    insert into laven_app_user_address_t (userInfoId, addressId, longitude, 
      latitude, province, city, 
      country, district, detailInfo, 
      notes)
    values (#{userinfoid,jdbcType=VARCHAR}, #{addressid,jdbcType=VARCHAR}, #{longitude,jdbcType=VARCHAR}, 
      #{latitude,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, #{city,jdbcType=VARCHAR}, 
      #{country,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{detailinfo,jdbcType=VARCHAR}, 
      #{notes,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddress">
    insert into laven_app_user_address_t
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userinfoid != null">
        userInfoId,
      </if>
      <if test="addressid != null">
        addressId,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="country != null">
        country,
      </if>
      <if test="district != null">
        district,
      </if>
      <if test="detailinfo != null">
        detailInfo,
      </if>
      <if test="notes != null">
        notes,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userinfoid != null">
        #{userinfoid,jdbcType=VARCHAR},
      </if>
      <if test="addressid != null">
        #{addressid,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        #{country,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="detailinfo != null">
        #{detailinfo,jdbcType=VARCHAR},
      </if>
      <if test="notes != null">
        #{notes,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddressExample" resultType="java.lang.Long">
    select count(*) from laven_app_user_address_t
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update laven_app_user_address_t
    <set>
      <if test="record.userinfoid != null">
        userInfoId = #{record.userinfoid,jdbcType=VARCHAR},
      </if>
      <if test="record.addressid != null">
        addressId = #{record.addressid,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.province != null">
        province = #{record.province,jdbcType=VARCHAR},
      </if>
      <if test="record.city != null">
        city = #{record.city,jdbcType=VARCHAR},
      </if>
      <if test="record.country != null">
        country = #{record.country,jdbcType=VARCHAR},
      </if>
      <if test="record.district != null">
        district = #{record.district,jdbcType=VARCHAR},
      </if>
      <if test="record.detailinfo != null">
        detailInfo = #{record.detailinfo,jdbcType=VARCHAR},
      </if>
      <if test="record.notes != null">
        notes = #{record.notes,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update laven_app_user_address_t
    set userInfoId = #{record.userinfoid,jdbcType=VARCHAR},
      addressId = #{record.addressid,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      province = #{record.province,jdbcType=VARCHAR},
      city = #{record.city,jdbcType=VARCHAR},
      country = #{record.country,jdbcType=VARCHAR},
      district = #{record.district,jdbcType=VARCHAR},
      detailInfo = #{record.detailinfo,jdbcType=VARCHAR},
      notes = #{record.notes,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddress">
    update laven_app_user_address_t
    <set>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="country != null">
        country = #{country,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="detailinfo != null">
        detailInfo = #{detailinfo,jdbcType=VARCHAR},
      </if>
      <if test="notes != null">
        notes = #{notes,jdbcType=VARCHAR},
      </if>
    </set>
    where userInfoId = #{userinfoid,jdbcType=VARCHAR}
      and addressId = #{addressid,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.laven.app.mybatis.dto.LavenAppUserAddress">
    update laven_app_user_address_t
    set longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      country = #{country,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      detailInfo = #{detailinfo,jdbcType=VARCHAR},
      notes = #{notes,jdbcType=VARCHAR}
    where userInfoId = #{userinfoid,jdbcType=VARCHAR}
      and addressId = #{addressid,jdbcType=VARCHAR}
  </update>
</mapper>